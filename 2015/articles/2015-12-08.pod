Title: fast cpan module installation
Topic: App::cpm
Author: Shoichi Kaji <skaji@cpan.org>

=pod

=head2 Introduction

I write Perl everyday with great cpan modules.

To install cpan modules, I always use L<cpanm>. I love it because it just works.

By the way, if you develop a serious Perl software, it often depends on hundreds
of cpan modules. In fact, dependence on Catalyst implies dependence on 100+ cpan
modules at least.

Then it takes quite a lot of time to install them with cpanm. This is because
cpanm installs them in series.

I always hoped I could install cpan modules faster.

In Perl QA Hackathon 2015, Tatsuhiko Miyagawa, the author of cpanm, developed
Menlo (the code name of cpanm 2.0). And he announced that Menlo would be
maintained and released as a regular perl module in L<his blog
post|http://weblog.bulknews.net/post/117034550339/cpanm-towards-20-menlo>. This
allows us to write Perl code that depends on Menlo. This is exciting, isn't it?

Then I finally made a cpan module installer
L<cpm|https://metacpan.org/pod/App::cpm>, which used Menlo in parallel. The
parallelism makes cpm faster than other cpan module installers.

=head2 Are you sure cpm is fast?

cpm is nothing special, so its installation is straightforward:

   $ cpanm App::cpm

Now you have cpm! Let's install Plack by cpanm and cpm, and compare their
elapsed times. Because cpm does not run test cases, execute cpanm with
C<--notest> option too:

   $ time cpanm -L extlib --notest --quiet Plack
   ...
   real    0m47.705s

Next cpm:

   $ time cpm install Plack
   ...
   real    0m16.629s

Wow, this shows cpm (16sec) is about 3 times faster than cpanm (47sec)! Of
course results will change depending on the situation, so why don't you try it
yourself?

=head2 TODO

In YAPC::Asia 2015, I could talked with miyagawa about cpanm. Then he said the
parallel feature might be merged into cpanm itself. I was really happy to hear
that.

To merge cpm into cpanm, there are some TODOs or issues that must be resolved:

=over 4

=item *

Support platforms that do not have fork(2) system call. cpm never take care of
such platforms, so I must fix it.

=item *

(This is a big issue, I think) Messy log output. Currently cpm uses Menlo in
parallel and the outputs of Menlos are just redirected to one file. So outputs
are mixed and really messy. I believe the logging is important for stable
softwares. Do you accept the messiness, or do you have any ideas to resolve
this?

=back

=head2 Wrap Up

cpm is a cpan module installer, which is faster than other cpan module
installers. You can try it by C<cpanm App::cpm>.

If you find cpm useful and stable, then it may be merged into cpanm!

=head2 SEE ALSO

=over 4

=item L<App::cpm>

=item L<App::cpanminus>

=item L<Menlo>

=back

=cut
