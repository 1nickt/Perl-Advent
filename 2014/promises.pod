=head1 NAME

Promises - who has promised an article

=head1 DESCRIPTION

This lists who has promised an article for 2014 advent calendar.

In a summary:

=over

=item There are three articles delivered and in the queue

=item There are two articles delivered pending being moved in the queue

=item Mark has written and committed eight articles so far

=item There are five promises for articles outstanding

=back

  perl -E 'say 24 - (3 + 2 + 8 + 5)'
  6

Wow, that's a lot of articles for me to write.

=over

=item There are three articls Mark is fairly confident he can complete

=back

  perl -E 'say 24 - (3 + 2 + 8 + 5 + 3)'
  3

Current prediction: We need B<three> more articles if Mark isn't going to
go insane.

=head2 Delivered

You all rock!

=over

=item Graham Ollis

Wrote an article on FFI::Raw

=item Marcus Ranberg

Marcus promised us an article on something Mojo related.  He delivered
a Mojo::Pg articl.

=item Dave Cross

Dave promised an article around the 1st.  It came late, but when it got
here it was good.

=item Neil Bowers

Delivered an article on MetaCPAN::Client

=item Ricardo Signes

Delivered an article on L<if>

=back

=head2 Promises

=over

=item Olaf Anders

First draft delivered, second draft coming real soon now.

=item Paul Evans

Is going to write an article on List::UtilsBy

=item John SJ Anderson

Promised an article.  Said he'd think about topics over thanksgiving

=item Augustina Ragwitz

Was writing an article on AnyEvent

=item Alex Balhatchet

Writing about Test::Kit

=back

=head2 Mark's Outstanding Articles

Mostly written

=over

=item App::ack

Yes, I'm aware that this was featured before.  But that was eight years
ago now.

=item Date::ICal::DateTime

Fun article about planning christmas day.  Date manipulation when to
put the turkey in the oven.  Timezone support so I can watch the
Queen's speech.

=item MooX::Options

The code's written on this, but I still have to write the article.

=back

=head2 Ideas for Future Articles

Possible ideas if no-one comes up with anything better:

=over

=item Regexp::Debugger

This one is going to require an animated gif showing how it works.
Mac OS X and Windows users can make these with http://www.cockos.com/licecap/

=item Reply (and Ply)

=item App::cpanminus

Easy installation from the commmand line from the cpan.  Installing a previous
version from the CPAN.  Installing from a checkout.  Installing direct from
github.

=item Capture::Tiny

Quick and easy

=back


